function solution(n) {
    var answer = 0;
    
    // 약수구하기
    const list = []
    for(let i =1; i<=n; i++){
        if(n%i === 0){
            list.push(i)
            
            // 연속된 숫자가 짝수인경우는 중앙값이 ~.5이므로 (짝수개를 체크하기 위한) 약수의 절반값도 추가하기
            list.push(i/2)
        }
    }
    
    list.forEach((el)=>{
        let count = n/el
        // el이 중심이고 count개수만큼
        // el=3 count=5 -> 3이 중심이고 총 5개 1 2 3 4 5
        if ( count % 2 === 1 ) {
            // el을 기준으로 count개를 나열하는데 첫 숫자가 1보다 작아지지 않도록 
            // 예시
            // 1. 4+5+6 = 15 의 경우 5를 약수로 추가하고
            // 2. 중앙값인 5, count 3에서 1빼고 2로 나눈수인 1 -> 5-1인 4가 첫숫자이고 count가 3이니까 4,5,6
            if((el - (count-1)/2)>=1){
                answer += 1
            }
        }
        else{
            // 짝수인 경우는 el(중앙값)이 .5여야한다. 
            // 만약 자연수라면 연속된 숫자가 없으므로 제외
            // 역시 연속된 첫 숫자가 1보다 작지않도록
            // 예시
            // 1. 7+8 = 15 의 경우는 15를 약수로 추가할때 /2된 7.5가 추가된 상황이고
            // 2. 7.5의 내림수인 7, 2를 2로 나누고 1을 뺀수 0 -> 7-0 이 첫숫자이고 count가 2이니까 7,8이 된다.
            if(el%1!==0 && (Math.floor(el) - (count/2 -1)>=1)){
                answer += 1
            }
        }
    })
    
    return answer;
}